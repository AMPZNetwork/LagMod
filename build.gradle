import net.fabricmc.loom.task.RemapJarTask

apply plugin: 'fabric-loom'
apply plugin: 'maven-publish'
apply plugin: 'de.undercouch.download'
apply plugin: 'com.github.johnrengelman.shadow'

ext {
    prefix = ""
}

group = project.maven_group + '.lagmod'

base {
    archivesName = project.archives_base_name
}

tasks.register('dlServerJar', Download).configure {
    src "https://meta.fabricmc.net/v2/versions/loader/1.20.1/0.15.11/1.0.1/server/jar"
    //src "https://serverjars.com/api/fetchJar/modded/fabric/${minecraft_version}"
    dest "${buildDir}/libs/server.jar"
}

tasks.register('dlFabricApi', Download).configure {
    src "https://mediafilez.forgecdn.net/files/${fabric_api_mod_cf}"
    dest "${projectDir}/run/mods/fabric-api.jar"
}

tasks.register('dlOwoLib', Download).configure {
    src "https://mediafilez.forgecdn.net/files/4573/684/owo-lib-0.11.0%2B1.20.jar"
    dest "${projectDir}/run/mods/owolib.jar"
}

tasks.register('serverJar', Copy) {
    dependsOn dlServerJar, dlFabricApi, dlOwoLib
    from dlServerJar.outputs.files.singleFile
    into "$projectDir/run"
    rename { n -> "server.jar" }
}

tasks.register('testMod', Copy) {
    dependsOn clean, remappedShadowJar
    from remappedShadowJar.outputs.files.singleFile
    into "${projectDir}/run/mods"
    rename { n -> "LagMod-fabric.jar" }
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenCentral()
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "lagMod-fabric-integration" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version_fabric}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Uncomment the following line to enable the deprecated Fabric API modules.
    // These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

    // modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
    //include(modImplementation('me.lucko:fabric-permissions-api:0.3.1'))

    // lagMod
    implementation project("$prefix:japi")

    include(project(':LibMod:fabric'))

    include(modImplementation('net.kyori:adventure-api:4.11.+'))
    include(modImplementation('net.kyori:adventure-text-serializer-gson:4.11.+'))

    // lombok
    api 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:+'
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

task remappedShadowJar(type: RemapJarTask) {
    dependsOn tasks.shadowJar
    input.set(tasks.shadowJar.archiveFile)
    addNestedDependencies.set(true)
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.

        mavenLocal()
    }
}

shadowJar { setProperty("zip64",true)
    dependencies {
        include project("$prefix:japi")

        include dependency('net.kyori:adventure-api:4.11.0')
        include dependency('net.kyori:adventure-key:4.11.0')
        include dependency('net.kyori:examination-api:1.3.0')
        include dependency('net.kyori:examination-string:1.3.0')
        include dependency('net.kyori:adventure-text-serializer-gson:4.11.0')
    }
}

task simplifyArtifact(type: Copy) {
    dependsOn test, remappedShadowJar
    from remappedShadowJar.outputs.files.singleFile
    into "$rootDir/build/libs/"
    rename { n -> "LagMod-fabric.jar" }
}
